data_num <- data_num %>%
select(-('Year':'Feedback'))
data_num <- data_num %>%
select(-Att)
#create reference data frame to score supplementary answers
correct_answers <- read.csv("~/Desktop/hopkins2016/data/correct_answers.csv", header = TRUE)
#score science literacy answers
data_num$expdesgn2 <- data_num$expdesgn1
for (item in names(correct_answers))
{
item_string <- toString(item)
participant_answer <- data_num[[item_string]]
correct_answer <- correct_answers[[item_string]][1]
print(participant_answer)
data_num[[item_string]] <- ifelse(participant_answer==correct_answer, 1, 0)
}
#aggregate scores
#nsf
data_num <- data_num %>%
mutate(nsf.score = (odds1 + odds2 + expdesgn1 + expdesgn2 + hotcore + radioact + boyorgirl + lasers + electron + viruses + bigbang + condrift + evolved + earthsun + solarrev))
#logic
data_num <- data_num %>%
mutate(logic.score = (Logic1 + Logic2 + Logic3 + Logic4))
#CRT
data_num <- data_num %>%
mutate(crt.score = (data_num$CRT1 + data_num$CRT2 + data_num$CRT3 + data_num$CRT4))
#delete individual item columns
data_num <- data_num %>%
#select(-('odds1':'Logic4'))
data_num <- data_num %>%
#select(-('CRT1':'CRT4'))
#aggregate scores
#nsf
data_num <- data_num %>%
mutate(nsf.score = (odds1 + odds2 + expdesgn1 + expdesgn2 + hotcore + radioact + boyorgirl + lasers + electron + viruses + bigbang + condrift + evolved + earthsun + solarrev))
#logic
data_num <- data_num %>%
mutate(logic.score = (Logic1 + Logic2 + Logic3 + Logic4))
#CRT
data_num <- data_num %>%
mutate(crt.score = (data_num$CRT1 + data_num$CRT2 + data_num$CRT3 + data_num$CRT4))
#delete individual item columns
data_num <- data_num %>%
select(-('odds1':'Logic4'))
data_num <- data_num %>%
select(-('CRT1':'CRT4'))
#exclude participants who failed attention check 1
filtered_raw_data <- raw_data %>%
filter(Slider1_1==0 | Slider2A_1==0 | Slider2B_1==0)
filtered_raw_data <- filtered_raw_data %>%
select(-(Slider1_1:Slider2B_1))
#exclude participants who failed attention check 2
filtered_raw_data <- filtered_raw_data %>%
filter(Att_1==3)
filtered_raw_data <- filtered_raw_data %>%
select(-Att_1)
#add participant numbers
data_num <- filtered_raw_data %>%
mutate(ID = 1:nrow(filtered_raw_data))
#total number of participants who passed attention checks
filtered_total = filtered_raw_data %>%
nrow()
#number of excluded participants
num_excluded = unfiltered_total - filtered_total
#deleting this that could be included in the regression but are a pain to include for now
data_num <- data_num %>%
select(-('Rigor_1':'Prestige_9'))
data_num <- data_num %>%
select(-('Year':'Feedback'))
data_num <- data_num %>%
select(-Att)
#score science literacy answers
data_num$expdesgn2 <- data_num$expdesgn1
for (item in names(correct_answers))
{
item_string <- toString(item)
participant_answer <- data_num[[item_string]]
correct_answer <- correct_answers[[item_string]][1]
print(participant_answer)
data_num[[item_string]] <- ifelse(participant_answer==correct_answer, 1, 0)
}
#aggregate scores
#nsf
data_num <- data_num %>%
mutate(nsf.score = (odds1 + odds2 + expdesgn1 + expdesgn2 + hotcore + radioact + boyorgirl + lasers + electron + viruses + bigbang + condrift + evolved + earthsun + solarrev))
#logic
data_num <- data_num %>%
mutate(logic.score = (Logic1 + Logic2 + Logic3 + Logic4))
#CRT
data_num <- data_num %>%
mutate(crt.score = (data_num$CRT1 + data_num$CRT2 + data_num$CRT3 + data_num$CRT4))
#delete individual item columns
data_num <- data_num %>%
select(-('odds1':'Logic4'))
data_num <- data_num %>%
select(-('CRT1':'CRT4'))
print(data_num)
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating")
#specify item attributes
data_long <- data_long %>%
mutate(science_and_item, str.split(full_item, ".")[1])
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating")
#specify item attributes
data_long <- data_long %>%
mutate("science_and_item", str.split(full_item, ".")[1])
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating")
#specify item attributes
data_long <- data_long %>%
mutate("science_and_item", strsplit(full_item, ".")[1])
data_long <- data_long %>%
mutate("condition_and_quality", strsplit(full_item, ".")[2])
print(data_long)
#create individual item columns
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
#specify item attributes
data_long <- data_long %>%
mutate("science_and_item", strsplit(full_item, ".")[1])
data_long <- data_long %>%
mutate("condition_and_quality", strsplit(full_item, ".")[2])
print(data_long)
#create individual item columns
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
datalong[!df$ratingc==""), ]
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
datalong[!(df$ratingc==""), ]
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
data_long[!(df$ratingc==""), ]
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
data_long[!(df$rating==""), ]
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
#get rid of empty rows
data_long <- data_long %>%
filter(!(rating==''))
#specify item attributes
data_long <- data_long %>%
mutate("science_and_item", strsplit(full_item, ".")[1])
data_long <- data_long %>%
mutate("condition_and_quality", strsplit(full_item, ".")[2])
print(data_long)
#create individual item columns
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
#get rid of empty rows
data_long <- data_long %>%
filter(!(rating==''))
#specify item attributes
data_long <- data_long %>%
mutate(science_and_item = strsplit(full_item, ".")[1])
data_long <- data_long %>%
mutate(condition_and_quality = strsplit(full_item, ".")[2])
print(data_long)
#create individual item columns
bruh <- 'P1.HG_1'
strsplit(bruh, ".")
split(bruh, ".")
str_split(bruh, ".")
bruhs <- c("P1.HG_1", "C2.HB_1")
str_split(bruhs, ".")
import.packages("splitr")
install.packages("splitr")
strsplit(bruh, ".")
substr(bruh, start=1, stop=2)
substr(bruh, start=3, stop=7)
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
#get rid of empty rows
data_long <- data_long %>%
filter(!(rating==''))
#specify item attributes
data_long <- data_long %>%
mutate(science = substr(full_item, start=1, stop=1))
data_long <- data_long %>%
mutate(science = substr(full_item, start=1, stop=2))
data_long <- data_long %>%
mutate(quality = substr(full_item, start=5, stop=5))
print(data_long)
#create individual item columns
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
#get rid of empty rows
data_long <- data_long %>%
filter(!(rating==''))
#specify item attributes
data_long <- data_long %>%
mutate(science = substr(full_item, start=1, stop=1))
data_long <- data_long %>%
mutate(item = substr(full_item, start=1, stop=2))
data_long <- data_long %>%
mutate(quality = substr(full_item, start=5, stop=5))
print(data_long)
#create individual item columns
#exclude participants who failed attention check 1
filtered_raw_data <- raw_data %>%
filter(Slider1_1==0 | Slider2A_1==0 | Slider2B_1==0)
filtered_raw_data <- filtered_raw_data %>%
select(-(Slider1_1:Slider2B_1))
#exclude participants who failed attention check 2
filtered_raw_data <- filtered_raw_data %>%
filter(Att_1==3)
filtered_raw_data <- filtered_raw_data %>%
select(-Att_1)
#add participant numbers
data_num <- filtered_raw_data %>%
mutate(ID = 1:nrow(filtered_raw_data))
#total number of participants who passed attention checks
filtered_total = filtered_raw_data %>%
nrow()
#number of excluded participants
num_excluded = unfiltered_total - filtered_total
#deleting this that could be included in the regression but are a pain to include for now
data_num <- data_num %>%
select(-('Rigor_1':'Prestige_9'))
data_num <- data_num %>%
select(-('Year':'Feedback'))
#score science literacy answers
data_num$expdesgn2 <- data_num$expdesgn1
for (item in names(correct_answers))
{
item_string <- toString(item)
participant_answer <- data_num[[item_string]]
correct_answer <- correct_answers[[item_string]][1]
print(participant_answer)
data_num[[item_string]] <- ifelse(participant_answer==correct_answer, 1, 0)
}
#aggregate scores
#nsf
data_num <- data_num %>%
mutate(nsf.score = (odds1 + odds2 + expdesgn1 + expdesgn2 + hotcore + radioact + boyorgirl + lasers + electron + viruses + bigbang + condrift + evolved + earthsun + solarrev))
#logic
data_num <- data_num %>%
mutate(logic.score = (Logic1 + Logic2 + Logic3 + Logic4))
#CRT
data_num <- data_num %>%
mutate(crt.score = (CRT1 + CRT2 + CRT3 + CRT4))
#delete individual item columns
data_num <- data_num %>%
select(-('odds1':'Logic4'))
data_num <- data_num %>%
select(-('CRT1':'CRT4'))
#aggregate scores
#nsf
data_num <- data_num %>%
mutate(nsf.score = (odds1 + odds2 + expdesgn1 + expdesgn2 + hotcore + radioact + boyorgirl + lasers + electron + viruses + bigbang + condrift + evolved + earthsun + solarrev))
#read data
raw_data <- read.csv("~/Desktop/hopkins2016/data/hopkins2016_data.csv", header = TRUE)
#delete junk rows
raw_data <- raw_data[-c(1),]
raw_data <- raw_data[-c(1),]
#delete junk columns
raw_data <- raw_data[, -c(1:18)]
#total number of participants
unfiltered_total <- raw_data %>%
nrow()
#delete justification response columns
raw_data <- raw_data %>%
select(-('P1.J.G.1':'S2.J.B.4'))
raw_data <- raw_data %>%
select(-('P3.J.G.1':'S4.J.B.4'))
#exclude participants who failed attention check 1
filtered_raw_data <- raw_data %>%
filter(Slider1_1==0 | Slider2A_1==0 | Slider2B_1==0)
filtered_raw_data <- filtered_raw_data %>%
select(-(Slider1_1:Slider2B_1))
#exclude participants who failed attention check 2
filtered_raw_data <- filtered_raw_data %>%
filter(Att_1==3)
filtered_raw_data <- filtered_raw_data %>%
select(-Att_1)
#add participant numbers
data_num <- filtered_raw_data %>%
mutate(ID = 1:nrow(filtered_raw_data))
#total number of participants who passed attention checks
filtered_total = filtered_raw_data %>%
nrow()
#number of excluded participants
num_excluded = unfiltered_total - filtered_total
#deleting this that could be included in the regression but are a pain to include for now
data_num <- data_num %>%
select(-('Rigor_1':'Prestige_9'))
data_num <- data_num %>%
select(-('Year':'Feedback'))
#score science literacy answers
data_num$expdesgn2 <- data_num$expdesgn1
for (item in names(correct_answers))
{
item_string <- toString(item)
participant_answer <- data_num[[item_string]]
correct_answer <- correct_answers[[item_string]][1]
data_num[[item_string]] <- ifelse(participant_answer==correct_answer, 1, 0)
}
#aggregate scores
#nsf
data_num <- data_num %>%
mutate(nsf.score = (odds1 + odds2 + expdesgn1 + expdesgn2 + hotcore + radioact + boyorgirl + lasers + electron + viruses + bigbang + condrift + evolved + earthsun + solarrev))
#logic
data_num <- data_num %>%
mutate(logic.score = (Logic1 + Logic2 + Logic3 + Logic4))
#CRT
data_num <- data_num %>%
mutate(crt.score = (CRT1 + CRT2 + CRT3 + CRT4))
#delete individual item columns
data_num <- data_num %>%
select(-('odds1':'Logic4'))
data_num <- data_num %>%
select(-('CRT1':'CRT4'))
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
#get rid of empty rows
data_long <- data_long %>%
filter(!(rating==''))
#specify item attributes
data_long <- data_long %>%
mutate(science = substr(full_item, start=1, stop=1))
data_long <- data_long %>%
mutate(item = substr(full_item, start=1, stop=2))
data_long <- data_long %>%
mutate(quality = substr(full_item, start=5, stop=5))
data_long <- data_long %>%
select(-full_item)
print(data_long)
#create individual item columns
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
#get rid of empty rows
data_long <- data_long %>%
filter(!(rating==''))
#specify item attributes
data_long <- data_long %>%
mutate(science = substr(full_item, start=1, stop=1))
data_long <- data_long %>%
mutate(item = substr(full_item, start=1, stop=2))
data_long <- data_long %>%
mutate(quality = substr(full_item, start=5, stop=5))
data_long <- data_long %>%
select(-full_item)
data_long$quality <- ifelse(data$long=="G", "good", "bad")
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
#get rid of empty rows
data_long <- data_long %>%
filter(!(rating==''))
#specify item attributes
data_long <- data_long %>%
mutate(science = substr(full_item, start=1, stop=1))
data_long <- data_long %>%
mutate(item = substr(full_item, start=1, stop=2))
data_long <- data_long %>%
mutate(quality = substr(full_item, start=5, stop=5))
data_long <- data_long %>%
select(-full_item)
data_long$quality <- ifelse(data_long$quality=="G", "good", "bad")
print(data_long)
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
#get rid of empty rows
data_long <- data_long %>%
filter(!(rating==''))
#specify item attributes
data_long <- data_long %>%
mutate(science = substr(full_item, start=1, stop=1))
data_long <- data_long %>%
mutate(item = substr(full_item, start=1, stop=2))
data_long <- data_long %>%
mutate(quality = substr(full_item, start=5, stop=5))
data_long <- data_long %>%
select(-full_item)
data_long$quality <- ifelse(data_long$quality=="G", "good", "bad")
data_long$quality <- ifelse(data_long$quality=="G", "good", "bad")
data_long$science <- ifelse(data_long$science=="P", "physics", data_long$science)
print(data_long)
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
#get rid of empty rows
data_long <- data_long %>%
filter(!(rating==''))
#specify item attributes
data_long <- data_long %>%
mutate(science = substr(full_item, start=1, stop=1))
data_long <- data_long %>%
mutate(item = substr(full_item, start=1, stop=2))
data_long <- data_long %>%
mutate(quality = substr(full_item, start=5, stop=5))
data_long <- data_long %>%
select(-full_item)
data_long$quality <- ifelse(data_long$quality=="G", "good", "bad")
data_long$quality <- ifelse(data_long$quality=="G", "good", "bad")
data_long$science <- ifelse(data_long$science=="P", "physics", data_long$science)
data_long$science <- ifelse(data_long$science=="C", "chemistry", data_long$science)
data_long$science <- ifelse(data_long$science=="B", "biology", data_long$science)
data_long$science <- ifelse(data_long$science=="N", "neuroscience", data_long$science)
data_long$science <- ifelse(data_long$science=="Y", "psychology", data_long$science)
data_long$science <- ifelse(data_long$science=="S", "social", data_long$science)
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
#get rid of empty rows
data_long <- data_long %>%
filter(!(rating==''))
#specify item attributes
data_long <- data_long %>%
mutate(science = substr(full_item, start=1, stop=1))
data_long <- data_long %>%
mutate(item = substr(full_item, start=1, stop=2))
data_long <- data_long %>%
mutate(quality = substr(full_item, start=5, stop=5))
data_long <- data_long %>%
select(-full_item)
data_long$quality <- ifelse(data_long$quality=="G", "good", "bad")
data_long$quality <- ifelse(data_long$quality=="G", "good", "bad")
data_long$science <- ifelse(data_long$science=="P", "physics", data_long$science)
data_long$science <- ifelse(data_long$science=="C", "chemistry", data_long$science)
data_long$science <- ifelse(data_long$science=="B", "biology", data_long$science)
data_long$science <- ifelse(data_long$science=="N", "neuroscience", data_long$science)
data_long$science <- ifelse(data_long$science=="Y", "psychology", data_long$science)
data_long$science <- ifelse(data_long$science=="S", "social", data_long$science)
print(data_long)
install.packages("arm")
#Load packages
library(reshape2)
library(lme4)
library(gplots)
library(psych)
library(effects)
library(ppcor)
library(car)
install.packages("data.table")
#Load packages
library(reshape2)
library(lme4)
library(gplots)
library(psych)
library(effects)
library(ppcor)
library(car)
#Read in and format data
#Reorder levels of the factors to facilitate contrast coding in regressions:
data$science <- relevel(data$science, ref = "social")
#convert to long format
data_long <- data_num %>%
pivot_longer(cols = 'P1.HG_1':'S4.RB_1', names_to = "full_item", values_to = "rating", values_drop_na=TRUE)
#get rid of empty rows
data_long <- data_long %>%
filter(!(rating==''))
#specify item attributes
data_long <- data_long %>%
mutate(science = substr(full_item, start=1, stop=1))
data_long <- data_long %>%
mutate(item = substr(full_item, start=1, stop=2))
data_long <- data_long %>%
mutate(quality = substr(full_item, start=5, stop=5))
data_long <- data_long %>%
select(-full_item)
#exclude participants who failed attention check 1
filtered_raw_data <- raw_data %>%
filter(Slider1_1==0 | Slider2A_1==0 | Slider2B_1==0)
filtered_raw_data <- filtered_raw_data %>%
select(-(Slider1_1:Slider2B_1))
#read data
raw_data <- read.csv("~/Desktop/hopkins2016/data/hopkins2016_data.csv", header = TRUE)
#delete junk rows
raw_data <- raw_data[-c(1),]
raw_data <- raw_data[-c(1),]
#delete junk columns
raw_data <- raw_data[, -c(1:18)]
#total number of participants
unfiltered_total <- raw_data %>%
nrow()
#delete justification response columns
raw_data <- raw_data %>%
select(-('P1.J.G.1':'S2.J.B.4'))
#load libraries
library(tidyverse)
library(csv)
#read data
raw_data <- read.csv("~/Desktop/hopkins2016/data/hopkins2016_data.csv", header = TRUE)
#delete junk rows
raw_data <- raw_data[-c(1),]
raw_data <- raw_data[-c(1),]
#delete junk columns
raw_data <- raw_data[, -c(1:18)]
#total number of participants
unfiltered_total <- raw_data %>%
nrow()
#delete justification response columns
raw_data <- raw_data %>%
select(-('P1.J.G.1':'S2.J.B.4'))
